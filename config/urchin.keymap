/*
 * Copyright (c) 2020 duckyb
 * SPDX-License-Identifier: MIT
 */

#include "keys_es.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define ALPHA 0
#define NUM 1
#define SYM 2
#define NAV 3
#define CONF 4

&sk {
  lazy;
};

&lt {
  flavor = "hold-preferred";
};

/ {

    behaviors {
          c_and_ced: c_and_cedilla {
              compatible = "zmk,behavior-mod-morph";
              label = "C_AND_CEDILLA";
              bindings = <&kp ES_C>, <&kp ES_C_CEDILLA>;

              #binding-cells = <0>;
              mods = <(MOD_LSFT|MOD_RSFT)>;
          };

          bksp_and_del: bksp_and_del {
              compatible = "zmk,behavior-mod-morph";
              label = "BKSP_AND_DEL";
              bindings = <&kp BACKSPACE>, <&kp DELETE>;

              #binding-cells = <0>;
              mods = <(MOD_LSFT|MOD_RSFT)>;
          };

          ord: ordinal {
              compatible = "zmk,behavior-mod-morph";
              label = "ORD";
              bindings = <&kp ES_ORDM>, <&kp ES_ORDF>;

              #binding-cells = <0>;
              mods = <(MOD_LSFT|MOD_RSFT)>;
          };

          x_cut: x_cut {
              compatible = "zmk,behavior-mod-morph";
              label = "X_CUT";
              bindings = <&kp ES_X>, <&kp C_AC_CUT>;

              #binding-cells = <0>;
              mods = <(MOD_LCTL|MOD_RCTL)>;
          };

          c_copy: c_copy {
              compatible = "zmk,behavior-mod-morph";
              label = "C_COPY";
              bindings = <&kp ES_C>, <&kp C_AC_COPY>;

              #binding-cells = <0>;
              mods = <(MOD_LCTL|MOD_RCTL)>;
          };

          v_paste: v_paste {
              compatible = "zmk,behavior-mod-morph";
              label = "V_PASTE";
              bindings = <&kp ES_V>, <&kp C_AC_PASTE>;

              #binding-cells = <0>;
              mods = <(MOD_LCTL|MOD_RCTL)>;
          };

          lay_2: layer_2_key {
              compatible = "zmk,behavior-hold-tap";
              label = "LAYER_2_KEY";
              bindings = <&mo>, <&bksp_and_del>;

              #binding-cells = <2>;
              tapping-term-ms = <200>;
          };

          sm: sticky_mod {
              compatible = "zmk,behavior-hold-tap";
              label = "STICKY_MOD";
              bindings = <&sk>, <&kp>;

              #binding-cells = <2>;
              tapping-term-ms = <200>;
          };
    };

    macros {
    };

    conditional_layers {
      compatible = "zmk,conditional-layers";
      nav_layer {
        if-layers = <1 2>;
        then-layer = <3>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
    &kp ES_Q    &kp ES_W    &kp ES_E    &kp ES_R    &kp ES_T    &kp ES_Y    &kp ES_U    &kp ES_I        &kp ES_O      &kp ES_P
    &kp ES_A    &kp ES_S    &kp ES_D    &kp ES_F    &kp ES_G    &kp ES_H    &kp ES_J    &kp ES_K        &kp ES_L      &kp ES_N_TILDE
    &kp ES_Z    &kp ES_X    &kp ES_C    &kp ES_V    &kp ES_B    &kp ES_N    &kp ES_M    &kp ES_COMMA    &kp ES_DOT    &kp ES_ACUTE
                                        &lay_2 SYM 0    &mt LCTRL RET    &mt LSHIFT ES_SPACE    &lt NUM ESC
            >;
        };

        numbers {
            bindings = <
    &trans       &trans       &kp ES_PRCNT    &kp ES_FSLH    &kp ES_MINUS    &kp ES_PLUS    &kp ES_STAR    &kp ES_EQUAL    &trans       &trans
    &kp ES_N1    &kp ES_N2    &kp ES_N3       &kp ES_N4      &kp ES_N5       &kp ES_N6      &kp ES_N7      &kp ES_N8       &kp ES_N9    &kp ES_N0
    &trans       &trans       &trans          &trans         &trans          &trans         &trans         &trans          &trans       &trans
                                              &trans         &trans          &trans         &trans
            >;
        };

        symbols {
            bindings = <
    &kp ES_EURO    &kp ES_AT        &kp ES_LT       &kp ES_GT      &kp ES_UNDER    &kp ES_AMPS    &kp ES_LBRC      &kp ES_RBRC     &kp ES_PIPE     &kp ES_BSLH
    &ord           &kp ES_HASH      &kp ES_LBKT     &kp ES_RBKT    &kp ES_DQT      &kp ES_SQT     &kp ES_LPAR      &kp ES_RPAR     &kp ES_DLLR     &kp ES_GRAVE
    &kp ES_NOT     &kp ES_MIDDOT    &kp ES_IEXCL    &kp ES_EXCL    &trans          &trans         &kp ES_IQMARK    &kp ES_QMARK    &kp ES_TILDE    &kp ES_UMLAUT
                                                    &trans         &trans          &trans          &trans
            >;
        };

        navigation {
            bindings = <
    &to CONF    &trans    &kp K_VOL_DN    &kp K_VOL_UP    &kp K_MUTE    &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &trans
    &trans      &trans    &kp K_PREV      &kp K_NEXT      &kp K_PP      &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp TAB
    &trans      &trans    &kp C_BRI_DN    &kp C_BRI_UP    &kp C_MENU    &sk LCTRL    &sk LGUI     &sk LALT     &sk RALT     &sk LSHIFT
                                          &trans          &trans        &trans      &trans
            >;
        };

        config {
            bindings = <
    &to ALPHA      &trans    &trans    &trans    &trans               &bt BT_CLR      &bt BT_SEL 2    &out OUT_TOG    &trans    &trans
    &sys_reset     &trans    &trans    &trans    &ext_power EP_TOG    &bt BT_SEL 0    &bt BT_SEL 3    &trans          &trans    &sys_reset
    &bootloader    &trans    &trans    &trans    &trans               &bt BT_SEL 1    &bt BT_SEL 4    &trans          &trans    &bootloader
                                       &trans    &trans               &trans          &trans
            >;
        };
    };
};
